plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)

    //Parcelize
    id 'kotlin-parcelize'
    //ksp
    id 'com.google.devtools.ksp'
    //hilt
    id 'com.google.dagger.hilt.android'
    alias(libs.plugins.google.gms.google.services)
}

android {
    namespace 'com.example.worktimetracker'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.worktimetracker"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation libs.androidx.appcompat
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.runtime.livedata
    implementation libs.firebase.storage
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    //Material Extended Icon
    implementation libs.androidx.material.icons.extended

    //Hilt
    implementation libs.hilt.android
    ksp libs.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose

    //Datastore
    implementation libs.androidx.datastore.preferences

    //Constraint Layout
    implementation libs.androidx.constraintlayout.compose

    //Navigation Compose
    implementation libs.androidx.navigation.compose

    //Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.gson

    //Datastore
    implementation libs.androidx.datastore.preferences
    implementation libs.androidx.datastore.core

    //Jwt
    implementation libs.jjwt

    //splash screen
    implementation libs.androidx.core.splashscreen

    //coil
    implementation(libs.coil.compose)

    //Sheet compose dialog
    implementation libs.core
    // CLOCK
    implementation libs.clock
    // CALENDAR
    implementation libs.calendar

    //Vico Chart
    implementation(libs.compose)
    // For `compose`. Creates a `ChartStyle` based on an M3 Material Theme.
    implementation(libs.compose.m3)
    // Houses the core logic for charts and other elements. Included in all other modules.
    implementation(libs.vico.core)

    //Biometric auth (fingerprint)
    implementation libs.androidx.biometric

    //  openstreet map
    implementation libs.osmdroid.android
    implementation libs.play.services.location

    implementation libs.composecalendar

    // separate artifact with utilities for working with kotlinx-datetime
    implementation libs.kotlinx.datetime

    //lottie
    implementation libs.lottie.compose
}